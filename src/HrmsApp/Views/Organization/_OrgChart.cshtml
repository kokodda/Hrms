@using HrmsApp.Models;
@model IEnumerable<OrgUnitViewModel>

<link rel="stylesheet" href="~/css/OrgChart.css" />

@{ 
    string rootCode = null;
    int rootCodeLength = 0;
    if (Model.Count() != 0)
    {
        rootCode = Model.First().OrgUnit.Code;
        rootCodeLength = rootCode.Length;
    }
}

<div class="container-fluid" style="padding:0px">
    <section id="chartViewSection">
        @if (Model.Count() != 0)
        {
            <div class="content">
                <figure class="org-chart cf">
                    <ul class="company">
                        <li>
                            @*<ul>
                                @if (rootCodeLength > 2)
                                {
                                    string[] codes = rootCode.Split('.');
                                    string ouCode = null;
                                    foreach (string cd in codes)
                                    {
                                        if (string.IsNullOrEmpty(ouCode)) { ouCode = cd; } else { ouCode = ouCode + "." + cd; }
                                        if (ouCode.Length < rootCodeLength)
                                        {
                                            var x = Model.FirstOrDefault(b => b.Code == ouCode);
                                            <li><a href="#" id="@x.Id" data-code="@x.OrgUnitType.SysCode"><span>@x.Name</span><br /><span>@x.HeadPositionName</span></a></li>
                                        }
                                    }
                                }
                            </ul>*@
                            <ul class="director">
                                <li>
                                    @if (Model.Count() != 0)
                                    {
                                        var x = Model.Where(b => b.OrgUnit.Code.Length == rootCodeLength).First().OrgUnit;
                                        <a href="#" class="bu" id="@x.Id" data-code="@x.OrgUnitType.SysCode"><span>@x.Name</span><br /><span>@x.HeadPositionName</span></a>
                                    }
                                    <ul class="subdirector">
                                        @foreach (var level1 in Model.Where(b => b.OrgUnit.Code.Length == (rootCodeLength + 3) && b.OrgUnit.OrgUnitType.SysCode == "OFFICE").Select(b => b.OrgUnit))
                                        {
                                            <li><a href="#" class="bu" id="@level1.Id" data-code="SUB"><span>@level1.Name</span><br /><span>@level1.HeadPositionName</span></a></li>
                                        }
                                    </ul>
                                    <ul class="departments cf">
                                        <li>
                                            <ul>
                                                @foreach (var level1 in Model.Where(b => b.OrgUnit.Code.Length == (rootCodeLength + 3) && b.OrgUnit.OrgUnitType.SysCode == "SUB").Select(b => b.OrgUnit))
                                                {
                                                    <li><a href="#" class="bu" id="@level1.Id" data-code="SUB"><span>@level1.Name</span><br /><span>@level1.HeadPositionName</span></a></li>
                                                }
                                            </ul>
                                        </li>
                                        @{
                                            string[] divStyle = new string[5];
                                            divStyle[0] = "dep-a"; divStyle[1] = "dep-b"; divStyle[2] = "dep-c"; divStyle[3] = "dep-d"; divStyle[4] = "dep-e";
                                            int idx = -1;
                                            foreach (var level2 in Model.Where(b => b.OrgUnit.Code.Length == (rootCodeLength + 3) && b.OrgUnit.OrgUnitType.SysCode != "SUB" && b.OrgUnit.OrgUnitType.SysCode != "OFFICE").Select(b => b.OrgUnit))
                                            {
                                                idx++;
                                                <li class="department @divStyle[idx]">
                                                    <a href="#" class="bu" id="@level2.Id" data-code="@level2.OrgUnitType.SysCode"><span>@level2.Name</span><br /><span>@level2.HeadPositionName</span></a>
                                                    <ul class="sections">
                                                        @foreach (var level3 in Model.Where(b => b.OrgUnit.Code.StartsWith(level2.Code) && b.OrgUnit.Code.Length == (rootCodeLength + 6) && b.OrgUnit.OrgUnitType.SysCode != "SUB" && b.OrgUnit.OrgUnitType.SysCode != "OFFICE").Select(b => b.OrgUnit))
                                                        {
                                                            <li class="section">
                                                                <a href="#" class="bu" id="@level3.Id" data-code="@level3.OrgUnitType.SysCode"><span>@level3.Name</span><br /><span>@level3.HeadPositionName</span></a>
                                                            </li>
                                                        }
                                                    </ul>
                                                </li>
                                            }
                                        }
                                    </ul>
                                </li>
                            </ul>
                        </li>
                    </ul>
                </figure>
            </div>
        }
    </section>
    
    <section id="listViewSection">
        <table class="table table-striped table-condensed">
            <thead>
                <tr>
                    <th><small>Unit Type</small></th>
                    <th><small>Name</small></th>
                    <th><small>Name Translated</small></th>
                    <th><small>Head Position</small></th>
                    <th><small>Headed By</small></th>
                    <th><small>T.Positions</small></th>
                    <th><small>T.Personnel</small></th>
                    <th><small>T.Vacancy</small></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td><small>@item.OrgUnit.OrgUnitType.Name</small></td>
                        <td><small>@item.OrgUnit.Name</small></td>
                        <td><small>@item.OrgUnit.OthName</small></td>
                        <td><small>@item.OrgUnit.HeadPositionName</small></td>
                        <td><small>@item.HeadedByName</small></td>
                        <td><small>@item.TotalPositions</small></td>
                        <td><small>@item.TotalPersonnel</small></td>
                        <td><small>@item.TotalVacancy</small></td>
                        <td>
                            <a href="#" class="btn btn-xs" onclick="editOrgUnit(@item.OrgUnit.Id)" data-toggle="modal" data-target="#myModal" title="Edit"><span class="fa fa-pencil"></span></a>
                            <a href="#" class="btn btn-xs" onclick="positionsList(@item.OrgUnit.Id)" title="Positions"><span class="fa fa-group"></span></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </section>
</div>


@if(Model.Count() != 0)
{
    @Html.Hidden("currOrgUnitIdHF", Model.First().OrgUnit.Id)
    @Html.Hidden("currOrgUnitNameHF", Model.First().OrgUnit.Name)
    @Html.Hidden("currOrgUnitTypeCodeHF", Model.First().OrgUnit.Code)
}
else
{
    @Html.Hidden("currOrgUnitIdHF")
    @Html.Hidden("currOrgUnitNameHF")
    @Html.Hidden("currOrgUnitTypeCodeHF")
}

<script>
    $(function () {
        $('.bu').on('click', function () {
            if ($(this).data('code') === 'SUB') {
                alert('Error! Unit Type "SUB" Cannot have Subordinates.');
                return;
            }
            if ($(this).attr('id') === $('#currOrgUnitIdHF').val()) {
                return;
            }
            $.ajax({
                url: '@Url.Action("OrgChart", "Organization")',
                type: 'GET',
                data: { id: $(this).attr('id') },
                success: function (result) {
                    $('#listSection').html(result);
                    if ($('#isList').val() === 'true') {
                        $('#listViewSection').show();
                        $('#chartViewSection').hide();
                    } else {
                        $('#listViewSection').hide();
                        $('#chartViewSection').show();
                    }
                    $('#goUp').removeAttr('disabled');
                }
            });
        });
    })
</script>